{"mappings":"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","sources":["src/js/player.js","src/js/projectile.js","src/js/enemy.js","src/js/wave.js","src/js/game.js","src/index.js"],"sourcesContent":["export class Player {\n  constructor(game) {\n    this.game = game;\n    this.width = 100;\n    this.height = 100;\n    this.x = this.game.width * 0.5 - this.width * 0.5;\n    this.y = this.game.height - this.height;\n    this.speed = 5;\n    this.lives = 3;\n  }\n\n  draw(context) {\n    context.fillRect(this.x, this.y, this.width, this.height);\n  }\n\n  update() {\n    //horizontal movement\n    if (this.game.keys.indexOf('ArrowLeft') > -1) this.x -= this.speed;\n    if (this.game.keys.indexOf('ArrowRight') > -1) this.x += this.speed;\n\n    //horizontal boundaries\n    if (this.x < -this.width * 0.5) this.x = -this.width * 0.5;\n    else if (this.x > this.game.width - this.width * 0.5)\n      this.x = this.game.width - this.width * 0.5;\n  }\n\n  shoot() {\n    const projectile = this.game.getProjectile();\n    if (projectile) projectile.start(this.x + this.width * 0.5, this.y);\n  }\n}\n","export class Projectile {\n  constructor() {\n    this.width = 30;\n    this.height = 20;\n    this.x = 0;\n    this.y = 0;\n    this.speed = 20;\n    this.free = true;\n  }\n\n  draw(context) {\n    if (!this.free) context.fillRect(this.x, this.y, this.width, this.height);\n  }\n\n  update() {\n    if (!this.free) this.y -= this.speed;\n    if (this.y < -this.height) this.reset();\n  }\n\n  start(x, y) {\n    this.x = x - this.width * 0.5;\n    this.y = y;\n    this.free = false;\n  }\n\n  reset() {\n    this.free = true;\n  }\n}\n","export class Enemy {\n  constructor(game, positionX, positionY) {\n    this.game = game;\n    this.width = this.game.enemySize;\n    this.height = this.game.enemySize;\n    this.x = 0;\n    this.y = 0;\n    this.positionX = positionX;\n    this.positionY = positionY;\n    this.markedForDeletion = false;\n  }\n\n  draw(context) {\n    context.strokeRect(this.x, this.y, this.width, this.height);\n  }\n\n  update(x, y) {\n    this.x = x + this.positionX;\n    this.y = y + this.positionY;\n\n    // check collisions enemies - projectiles\n    this.game.projectilesPool.forEach(projectile => {\n      if (!projectile.free && this.game.checkCollision(this, projectile)) {\n        this.markedForDeletion = true;\n        projectile.reset();\n\n        if (!this.game.gameOver) this.game.score++;\n      }\n    });\n\n    // check collisions enemies - player\n    if (this.game.checkCollision(this, this.game.player)) {\n      this.markedForDeletion = true;\n\n      if (!this.game.gameOver && this.game.score > 0) this.game.score--;\n\n      this.game.player.lives--;\n      if (this.game.player.lives < 1) this.game.gameOver = true;\n    }\n\n    // lose condition\n    if (this.y + this.height > this.game.height) {\n      this.game.gameOver = true;\n      this.markedForDeletion = true;\n    }\n  }\n}\n","import { Enemy } from './enemy';\n\nexport class Wave {\n  constructor(game) {\n    this.game = game;\n    this.width = this.game.columns * this.game.enemySize;\n    this.height = this.game.rows * this.game.enemySize;\n    this.x = 0;\n    this.y = -this.height;\n    this.speedX = 3;\n    this.speedY = 0;\n    this.enemies = [];\n    this.nextWaveTrigger = false;\n    this.create();\n  }\n\n  render(context) {\n    if (this.y < 0) this.y += 5;\n\n    this.speedY = 0;\n    if (this.x < 0 || this.x > this.game.width - this.width) {\n      this.speedX *= -1;\n      this.speedY = this.game.enemySize;\n    }\n\n    this.x += this.speedX;\n    this.y += this.speedY;\n\n    this.enemies.forEach(enemy => {\n      enemy.update(this.x, this.y);\n      enemy.draw(context);\n    });\n\n    this.enemies = this.enemies.filter(enemy => !enemy.markedForDeletion);\n  }\n\n  create() {\n    for (let y = 0; y < this.game.rows; y++) {\n      for (let x = 0; x < this.game.columns; x++) {\n        let enemyX = x * this.game.enemySize;\n        let enemyY = y * this.game.enemySize;\n\n        this.enemies.push(new Enemy(this.game, enemyX, enemyY));\n      }\n    }\n  }\n}\n","import { Player } from './player';\nimport { Projectile } from './projectile';\nimport { Wave } from './wave';\n\nexport class Game {\n  constructor(canvas) {\n    this.canvas = canvas;\n    this.width = this.canvas.width;\n    this.height = this.canvas.height;\n    this.keys = [];\n    this.player = new Player(this);\n\n    this.projectilesPool = [];\n    this.numberOfProjectiles = 10;\n    this.createProjectiles();\n\n    this.columns = 2;\n    this.rows = 2;\n    this.enemySize = 60;\n\n    this.waves = [];\n    this.waves.push(new Wave(this));\n    this.waveCount = 1;\n\n    this.score = 0;\n    this.gameOver = false;\n\n    //Event listener\n    window.addEventListener('keydown', evt => {\n      if (this.keys.indexOf(evt.key) === -1) this.keys.push(evt.key);\n      if (evt.key === '1') this.player.shoot();\n    });\n\n    window.addEventListener('keyup', evt => {\n      const idx = this.keys.indexOf(evt.key);\n      if (idx > -1) this.keys.splice(idx, 1);\n    });\n  }\n\n  render(context) {\n    this.drawStatusText(context);\n    this.player.draw(context);\n    this.player.update();\n    this.projectilesPool.forEach(projectile => {\n      projectile.update();\n      projectile.draw(context);\n    });\n\n    this.waves.forEach(wave => {\n      wave.render(context);\n\n      if (wave.enemies.length < 1 && !wave.nextWaveTrigger && !this.gameOver) {\n        this.newWave();\n        this.waveCount++;\n        wave.nextWaveTrigger = true;\n        this.player.lives++;\n      }\n    });\n  }\n\n  // створення здарядів\n  createProjectiles() {\n    for (let i = 0; i < this.numberOfProjectiles; i++) {\n      this.projectilesPool.push(new Projectile());\n    }\n  }\n\n  getProjectile() {\n    for (let i = 0; i < this.projectilesPool.length; i++) {\n      if (this.projectilesPool[i].free) {\n        return this.projectilesPool[i];\n      }\n    }\n  }\n\n  // collision detection between 2 rectangles\n  checkCollision(a, b) {\n    return (\n      a.x < b.x + b.width &&\n      a.x + a.width > b.x &&\n      a.y < b.y + b.height &&\n      a.y + a.height > b.y\n    );\n  }\n\n  drawStatusText(context) {\n    context.save();\n\n    // text-shadow\n    context.shadowOffsetX = 2;\n    context.shadowOffsetY = 2;\n    context.shadowColor = 'violet';\n\n    // game-indicators\n    context.fillText('Score: ' + this.score, 20, 40);\n    context.fillText('Wave: ' + this.waveCount, 20, 80);\n    for (let i = 0; i < this.player.lives; i++) {\n      context.fillRect(20 + 10 * i, 100, 5, 20);\n    }\n\n    if (this.gameOver) {\n      context.textAlign = 'center';\n\n      context.font = '100px Impact';\n      context.fillText('GAME OVER', this.width * 0.5, this.height * 0.5);\n\n      context.font = '20px Impact';\n      context.fillText(\n        'Press R to restart!',\n        this.width * 0.5,\n        this.height * 0.5 + 30\n      );\n    }\n\n    context.restore();\n  }\n\n  newWave() {\n    if (\n      Math.random() < 0.5 &&\n      this.columns * this.enemySize < this.width * 0.8\n    ) {\n      this.columns++;\n    } else if (this.rows * this.enemySize < this.width * 0.6) {\n      this.rows++;\n    }\n\n    this.waves.push(new Wave(this));\n  }\n}\n","import { Game } from './js/game';\n\nwindow.addEventListener('load', function () {\n  const canvas = document.getElementById('canvas1');\n  const ctx = canvas.getContext('2d');\n  canvas.width = 600;\n  canvas.height = 800;\n  ctx.fillStyle = 'white';\n  ctx.strokeStyle = 'white';\n  ctx.lineWidth = 5;\n  ctx.font = '30px impact';\n\n  const game = new Game(canvas);\n\n  function animate() {\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    game.render(ctx);\n    requestAnimationFrame(animate);\n  }\n\n  animate();\n});\n"],"names":["$03ce2d03a8d35791$export$2616165974278734","draw","context","fillRect","this","x","y","width","height","update","game","keys","indexOf","speed","shoot","projectile","getProjectile","start","constructor","lives","$b5a217e963599e6a$export$58825bda29b44ca2","free","reset","$fd9ba723fbe17f5f$export$eefe978c73a9a6","strokeRect","positionX","positionY","projectilesPool","forEach","checkCollision","markedForDeletion","gameOver","score","player","enemySize","$10dfe213bd0050ea$export$b8bb87b40c00c04e","render","speedY","speedX","enemies","enemy","filter","create","rows","columns","enemyX","enemyY","push","nextWaveTrigger","$71548325fa41fa94$export$985739bfa5723e08","drawStatusText","waves","wave","length","newWave","waveCount","createProjectiles","i","numberOfProjectiles","a","b","save","shadowOffsetX","shadowOffsetY","shadowColor","fillText","textAlign","font","restore","Math","random","canvas","window","addEventListener","evt","key","idx","splice","document","getElementById","ctx","getContext","fillStyle","strokeStyle","lineWidth","animate","clearRect","requestAnimationFrame"],"version":3,"file":"index.8492afe2.js.map"}