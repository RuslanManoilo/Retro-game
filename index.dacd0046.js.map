{"mappings":"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","sources":["src/js/player.js","src/js/projectile.js","src/js/beetlemorph.js","src/js/enemy.js","src/js/wave.js","src/js/game.js","src/index.js"],"sourcesContent":["export class Player {\n  constructor(game) {\n    this.game = game;\n    this.width = 140;\n    this.height = 120;\n    this.x = this.game.width * 0.5 - this.width * 0.5;\n    this.y = this.game.height - this.height;\n    this.speed = 5;\n    this.lives = 3;\n    this.maxLives = 10;\n\n    this.image = document.getElementById('player');\n    this.jets_image = document.getElementById('player_jets');\n    this.frameX = 0;\n    this.jetsFrameX = 1;\n  }\n\n  draw(context) {\n    // handle sprite frames\n    if (this.game.keys.indexOf('1')) {\n      this.frameX = 1;\n    } else {\n      this.frameX = 0;\n    }\n\n    context.drawImage(\n      this.image,\n      this.frameX * this.width,\n      0,\n      this.width,\n      this.height,\n      this.x,\n      this.y,\n      this.width,\n      this.height\n    );\n    context.drawImage(\n      this.jets_image,\n      this.jetsFrameX * this.width,\n      0,\n      this.width,\n      this.height,\n      this.x,\n      this.y,\n      this.width,\n      this.height\n    );\n  }\n\n  update() {\n    //horizontal movement\n    if (this.game.keys.indexOf('ArrowLeft') > -1) {\n      this.x -= this.speed;\n      this.jetsFrameX = 0;\n    } else if (this.game.keys.indexOf('ArrowRight') > -1) {\n      this.x += this.speed;\n      this.jetsFrameX = 2;\n    } else {\n      this.jetsFrameX = 1;\n    }\n\n    //horizontal boundaries\n    if (this.x < -this.width * 0.5) this.x = -this.width * 0.5;\n    else if (this.x > this.game.width - this.width * 0.5)\n      this.x = this.game.width - this.width * 0.5;\n  }\n\n  shoot() {\n    const projectile = this.game.getProjectile();\n    if (projectile) projectile.start(this.x + this.width * 0.5, this.y);\n  }\n\n  restart() {\n    this.x = this.game.width * 0.5 - this.width * 0.5;\n    this.y = this.game.height - this.height;\n    this.lives = 3;\n  }\n}\n","export class Projectile {\n  constructor() {\n    this.width = 3;\n    this.height = 40;\n    this.x = 0;\n    this.y = 0;\n    this.speed = 20;\n    this.free = true;\n  }\n\n  draw(context) {\n    if (!this.free) {\n      context.save();\n      context.fillStyle = 'gold';\n      context.fillRect(this.x, this.y, this.width, this.height);\n      context.restore();\n    };\n  }\n\n  update() {\n    if (!this.free) this.y -= this.speed;\n    if (this.y < -this.height) this.reset();\n  }\n\n  start(x, y) {\n    this.x = x - this.width * 0.5;\n    this.y = y;\n    this.free = false;\n  }\n\n  reset() {\n    this.free = true;\n  }\n}\n","import { Enemy } from './enemy';\n\nexport class Beetlemorph extends Enemy {\n  constructor(game, positionX, positionY) {\n    super(game, positionX, positionY);\n    this.image = document.getElementById('beetlemorph');\n    this.frameX = 0;\n    this.maxFrame = 2;\n    this.frameY = Math.floor(Math.random() * 4);\n    this.lives = 1;\n    this.maxLives = this.lives;\n  }\n}\n","export class Enemy {\n  constructor(game, positionX, positionY) {\n    this.game = game;\n    this.width = this.game.enemySize;\n    this.height = this.game.enemySize;\n    this.x = 0;\n    this.y = 0;\n    this.positionX = positionX;\n    this.positionY = positionY;\n    this.markedForDeletion = false;\n  }\n\n  draw(context) {\n    // context.strokeRect(this.x, this.y, this.width, this.height);\n    context.drawImage(\n      this.image,\n      this.frameX * this.width,\n      this.frameY * this.height,\n      this.width,\n      this.height,\n      this.x,\n      this.y,\n      this.width,\n      this.height\n    );\n  }\n\n  update(x, y) {\n    this.x = x + this.positionX;\n    this.y = y + this.positionY;\n\n    // check collisions enemies - projectiles\n    this.game.projectilesPool.forEach(projectile => {\n      if (!projectile.free && this.game.checkCollision(this, projectile) && this.lives > 0) {\n        this.hit(1);\n        projectile.reset();\n      }\n    });\n\n    if (this.lives < 1) {\n      if (this.game.spriteUpdate) this.frameX++;\n      \n      if (this.frameX > this.maxFrame) {\n        this.markedForDeletion = true;\n        if (!this.game.gameOver) this.game.score += this.maxLives;\n      }\n    }\n\n    // check collisions enemies - player\n    if (this.game.checkCollision(this, this.game.player) && this.lives > 0) {\n      this.lives = 0;\n      this.game.player.lives--;\n    }\n\n    // lose condition\n    if (this.y + this.height > this.game.height || this.game.player.lives < 1) {\n      this.game.gameOver = true;\n    }\n  }\n\n  hit(damage) {\n    this.lives -= damage;\n  }\n}\n","import { Beetlemorph } from \"./beetlemorph\";\n\nexport class Wave {\n  constructor(game) {\n    this.game = game;\n    this.width = this.game.columns * this.game.enemySize;\n    this.height = this.game.rows * this.game.enemySize;\n    this.x = this.game.width * 0.5 - this.width * 0.5;\n    this.y = -this.height;\n    this.speedX = Math.random() < 0.5 ? -3 : 3;\n    this.speedY = 0;\n    this.enemies = [];\n    this.nextWaveTrigger = false;\n    this.create();\n  }\n\n  render(context) {\n    if (this.y < 0) this.y += 5;\n\n    this.speedY = 0;\n    if (this.x < 0 || this.x > this.game.width - this.width) {\n      this.speedX *= -1;\n      this.speedY = this.game.enemySize;\n    }\n\n    this.x += this.speedX;\n    this.y += this.speedY;\n\n    this.enemies.forEach(enemy => {\n      enemy.update(this.x, this.y);\n      enemy.draw(context);\n    });\n\n    this.enemies = this.enemies.filter(enemy => !enemy.markedForDeletion);\n  }\n\n  create() {\n    for (let y = 0; y < this.game.rows; y++) {\n      for (let x = 0; x < this.game.columns; x++) {\n        let enemyX = x * this.game.enemySize;\n        let enemyY = y * this.game.enemySize;\n\n        this.enemies.push(new Beetlemorph(this.game, enemyX, enemyY));\n      }\n    }\n  }\n}\n","import { Player } from './player';\nimport { Projectile } from './projectile';\nimport { Wave } from './wave';\n\nexport class Game {\n  constructor(canvas) {\n    this.canvas = canvas;\n    this.width = this.canvas.width;\n    this.height = this.canvas.height;\n    this.keys = [];\n    this.player = new Player(this);\n\n    this.projectilesPool = [];\n    this.numberOfProjectiles = 15;\n    this.createProjectiles();\n    this.fired = false;\n\n    this.columns = 1;\n    this.rows = 1;\n    this.enemySize = 80;\n\n    this.waves = [];\n    this.waves.push(new Wave(this));\n    this.waveCount = 1;\n\n    this.spriteUpdate = false;\n    this.spriteTimer = 0;\n    this.spriteInterval = 150;\n\n    this.score = 0;\n    this.gameOver = false;\n\n    //Event listener\n    window.addEventListener('keydown', evt => {\n      if (evt.key === '1' && !this.fired) this.player.shoot();\n      this.fired = true;\n\n      if (this.keys.indexOf(evt.key) === -1) this.keys.push(evt.key);\n      if (evt.key === 'r' && this.gameOver) this.restart();\n    });\n\n    window.addEventListener('keyup', evt => {\n      this.fired = false;\n\n      const idx = this.keys.indexOf(evt.key);\n      if (idx > -1) this.keys.splice(idx, 1);\n    });\n  }\n\n  render(context, deltaTime) {\n    // sprite timing\n    if (this.spriteTimer > this.spriteInterval) {\n      this.spriteUpdate = true;\n      this.spriteTimer = 0;\n    } else {\n      this.spriteUpdate = false;\n      this.spriteTimer += deltaTime;\n    }\n\n    this.drawStatusText(context);\n    this.projectilesPool.forEach(projectile => {\n      projectile.update();\n      projectile.draw(context);\n    });\n    this.player.draw(context);\n    this.player.update();\n\n    this.waves.forEach(wave => {\n      wave.render(context);\n\n      if (wave.enemies.length < 1 && !wave.nextWaveTrigger && !this.gameOver) {\n        this.newWave();\n        this.waveCount++;\n        wave.nextWaveTrigger = true;\n        if (this.player.lives < this.player.maxLives) this.player.lives++;\n      }\n    });\n  }\n\n  // create projectiles\n  createProjectiles() {\n    for (let i = 0; i < this.numberOfProjectiles; i++) {\n      this.projectilesPool.push(new Projectile());\n    }\n  }\n\n  getProjectile() {\n    for (let i = 0; i < this.projectilesPool.length; i++) {\n      if (this.projectilesPool[i].free) {\n        return this.projectilesPool[i];\n      }\n    }\n  }\n\n  // collision detection between 2 rectangles\n  checkCollision(a, b) {\n    return (\n      a.x < b.x + b.width &&\n      a.x + a.width > b.x &&\n      a.y < b.y + b.height &&\n      a.y + a.height > b.y\n    );\n  }\n\n  drawStatusText(context) {\n    context.save();\n\n    // text-shadow\n    context.shadowOffsetX = 2;\n    context.shadowOffsetY = 2;\n    context.shadowColor = 'violet';\n\n    // game-indicators\n    context.fillText('Score: ' + this.score, 20, 40);\n    context.fillText('Wave: ' + this.waveCount, 20, 80);\n    for (let i = 0; i < this.player.maxLives; i++) {\n      context.strokeRect(20 + 20 * i, 100, 10, 15);\n    }\n    for (let i = 0; i < this.player.lives; i++) {\n      context.fillRect(20 + 20 * i, 100, 10, 15);\n    }\n\n    if (this.gameOver) {\n      context.textAlign = 'center';\n\n      context.font = '100px Impact';\n      context.fillText('GAME OVER', this.width * 0.5, this.height * 0.5);\n\n      context.font = '20px Impact';\n      context.fillText(\n        'Press R to restart!',\n        this.width * 0.5,\n        this.height * 0.5 + 30\n      );\n    }\n\n    context.restore();\n  }\n\n  newWave() {\n    if (\n      Math.random() < 0.5 &&\n      this.columns * this.enemySize < this.width * 0.8\n    ) {\n      this.columns++;\n    } else if (this.rows * this.enemySize < this.width * 0.6) {\n      this.rows++;\n    }\n\n    this.waves.push(new Wave(this));\n  }\n\n  restart() {\n    this.player.restart();\n\n    this.columns = 2;\n    this.rows = 2;\n\n    this.waves = [];\n    this.waves.push(new Wave(this));\n    this.waveCount = 1;\n\n    this.score = 0;\n    this.gameOver = false;\n  }\n}\n","import { Game } from './js/game';\n\nwindow.addEventListener('load', function () {\n  const canvas = document.getElementById('canvas1');\n  const ctx = canvas.getContext('2d');\n  canvas.width = 600;\n  canvas.height = 800;\n  ctx.fillStyle = 'white';\n  ctx.strokeStyle = 'white';\n  ctx.font = '30px impact';\n\n  const game = new Game(canvas);\n\n  let lastTime = 0;\n\n  function animate(timeStamp) {\n    deltaTime = timeStamp - lastTime;\n    lastTime = timeStamp;\n\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    game.render(ctx, deltaTime);\n    requestAnimationFrame(animate);\n  }\n\n  animate(0);\n});\n"],"names":["$03ce2d03a8d35791$export$2616165974278734","draw","context","this","game","keys","indexOf","frameX","drawImage","image","width","height","x","y","jets_image","jetsFrameX","update","speed","shoot","projectile","getProjectile","start","restart","lives","constructor","maxLives","document","getElementById","$b5a217e963599e6a$export$58825bda29b44ca2","free","save","fillStyle","fillRect","restore","reset","$2c01127ac8512aca$export$fffece4a57481b19","frameY","positionX","positionY","projectilesPool","forEach","checkCollision","hit","spriteUpdate","maxFrame","markedForDeletion","gameOver","score","player","damage","enemySize","super","Math","floor","random","$10dfe213bd0050ea$export$b8bb87b40c00c04e","render","speedY","speedX","enemies","enemy","filter","create","rows","columns","enemyX","enemyY","push","nextWaveTrigger","$71548325fa41fa94$export$985739bfa5723e08","deltaTime","spriteTimer","spriteInterval","drawStatusText","waves","wave","length","newWave","waveCount","createProjectiles","i","numberOfProjectiles","a","b","shadowOffsetX","shadowOffsetY","shadowColor","fillText","strokeRect","i1","textAlign","font","canvas","fired","window","addEventListener","evt","key","idx","splice","ctx","getContext","strokeStyle","lastTime","animate","timeStamp","clearRect","requestAnimationFrame"],"version":3,"file":"index.dacd0046.js.map"}